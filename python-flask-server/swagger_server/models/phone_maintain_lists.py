# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PhoneMaintainLists(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, work: str=None, order: str=None, type: str=None, ocode: str=None, code: str=None, personnel: str=None):  # noqa: E501
        """PhoneMaintainLists - a model defined in Swagger

        :param work: The work of this PhoneMaintainLists.  # noqa: E501
        :type work: str
        :param order: The order of this PhoneMaintainLists.  # noqa: E501
        :type order: str
        :param type: The type of this PhoneMaintainLists.  # noqa: E501
        :type type: str
        :param ocode: The ocode of this PhoneMaintainLists.  # noqa: E501
        :type ocode: str
        :param code: The code of this PhoneMaintainLists.  # noqa: E501
        :type code: str
        :param personnel: The personnel of this PhoneMaintainLists.  # noqa: E501
        :type personnel: str
        """
        self.swagger_types = {
            'work': str,
            'order': str,
            'type': str,
            'ocode': str,
            'code': str,
            'personnel': str
        }

        self.attribute_map = {
            'work': 'work',
            'order': 'order',
            'type': 'type',
            'ocode': 'ocode',
            'code': 'code',
            'personnel': 'personnel'
        }

        self._work = work
        self._order = order
        self._type = type
        self._ocode = ocode
        self._code = code
        self._personnel = personnel

    @classmethod
    def from_dict(cls, dikt) -> 'PhoneMaintainLists':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The phoneMaintainLists of this PhoneMaintainLists.  # noqa: E501
        :rtype: PhoneMaintainLists
        """
        return util.deserialize_model(dikt, cls)

    @property
    def work(self) -> str:
        """Gets the work of this PhoneMaintainLists.

        workstation  # noqa: E501

        :return: The work of this PhoneMaintainLists.
        :rtype: str
        """
        return self._work

    @work.setter
    def work(self, work: str):
        """Sets the work of this PhoneMaintainLists.

        workstation  # noqa: E501

        :param work: The work of this PhoneMaintainLists.
        :type work: str
        """

        self._work = work

    @property
    def order(self) -> str:
        """Gets the order of this PhoneMaintainLists.

        Complaint number  # noqa: E501

        :return: The order of this PhoneMaintainLists.
        :rtype: str
        """
        return self._order

    @order.setter
    def order(self, order: str):
        """Sets the order of this PhoneMaintainLists.

        Complaint number  # noqa: E501

        :param order: The order of this PhoneMaintainLists.
        :type order: str
        """

        self._order = order

    @property
    def type(self) -> str:
        """Gets the type of this PhoneMaintainLists.

        Replace terminal type  # noqa: E501

        :return: The type of this PhoneMaintainLists.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this PhoneMaintainLists.

        Replace terminal type  # noqa: E501

        :param type: The type of this PhoneMaintainLists.
        :type type: str
        """

        self._type = type

    @property
    def ocode(self) -> str:
        """Gets the ocode of this PhoneMaintainLists.

        Original barcode  # noqa: E501

        :return: The ocode of this PhoneMaintainLists.
        :rtype: str
        """
        return self._ocode

    @ocode.setter
    def ocode(self, ocode: str):
        """Sets the ocode of this PhoneMaintainLists.

        Original barcode  # noqa: E501

        :param ocode: The ocode of this PhoneMaintainLists.
        :type ocode: str
        """

        self._ocode = ocode

    @property
    def code(self) -> str:
        """Gets the code of this PhoneMaintainLists.

        new barcode  # noqa: E501

        :return: The code of this PhoneMaintainLists.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code: str):
        """Sets the code of this PhoneMaintainLists.

        new barcode  # noqa: E501

        :param code: The code of this PhoneMaintainLists.
        :type code: str
        """

        self._code = code

    @property
    def personnel(self) -> str:
        """Gets the personnel of this PhoneMaintainLists.

        Installation staff  # noqa: E501

        :return: The personnel of this PhoneMaintainLists.
        :rtype: str
        """
        return self._personnel

    @personnel.setter
    def personnel(self, personnel: str):
        """Sets the personnel of this PhoneMaintainLists.

        Installation staff  # noqa: E501

        :param personnel: The personnel of this PhoneMaintainLists.
        :type personnel: str
        """

        self._personnel = personnel
