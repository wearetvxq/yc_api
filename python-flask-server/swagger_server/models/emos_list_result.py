# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.emos_list_result_accounting import EmosListResultAccounting  # noqa: F401,E501
from swagger_server.models.emos_list_result_duration import EmosListResultDuration  # noqa: F401,E501
from swagger_server import util


class EmosListResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, area: str=None, duration: List[EmosListResultDuration]=None, accounting: List[EmosListResultAccounting]=None):  # noqa: E501
        """EmosListResult - a model defined in Swagger

        :param id: The id of this EmosListResult.  # noqa: E501
        :type id: int
        :param area: The area of this EmosListResult.  # noqa: E501
        :type area: str
        :param duration: The duration of this EmosListResult.  # noqa: E501
        :type duration: List[EmosListResultDuration]
        :param accounting: The accounting of this EmosListResult.  # noqa: E501
        :type accounting: List[EmosListResultAccounting]
        """
        self.swagger_types = {
            'id': int,
            'area': str,
            'duration': List[EmosListResultDuration],
            'accounting': List[EmosListResultAccounting]
        }

        self.attribute_map = {
            'id': 'id',
            'area': 'area',
            'duration': 'duration',
            'accounting': 'accounting'
        }

        self._id = id
        self._area = area
        self._duration = duration
        self._accounting = accounting

    @classmethod
    def from_dict(cls, dikt) -> 'EmosListResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EmosListResult of this EmosListResult.  # noqa: E501
        :rtype: EmosListResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this EmosListResult.

        ID  # noqa: E501

        :return: The id of this EmosListResult.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this EmosListResult.

        ID  # noqa: E501

        :param id: The id of this EmosListResult.
        :type id: int
        """

        self._id = id

    @property
    def area(self) -> str:
        """Gets the area of this EmosListResult.

        area  # noqa: E501

        :return: The area of this EmosListResult.
        :rtype: str
        """
        return self._area

    @area.setter
    def area(self, area: str):
        """Sets the area of this EmosListResult.

        area  # noqa: E501

        :param area: The area of this EmosListResult.
        :type area: str
        """

        self._area = area

    @property
    def duration(self) -> List[EmosListResultDuration]:
        """Gets the duration of this EmosListResult.


        :return: The duration of this EmosListResult.
        :rtype: List[EmosListResultDuration]
        """
        return self._duration

    @duration.setter
    def duration(self, duration: List[EmosListResultDuration]):
        """Sets the duration of this EmosListResult.


        :param duration: The duration of this EmosListResult.
        :type duration: List[EmosListResultDuration]
        """

        self._duration = duration

    @property
    def accounting(self) -> List[EmosListResultAccounting]:
        """Gets the accounting of this EmosListResult.


        :return: The accounting of this EmosListResult.
        :rtype: List[EmosListResultAccounting]
        """
        return self._accounting

    @accounting.setter
    def accounting(self, accounting: List[EmosListResultAccounting]):
        """Sets the accounting of this EmosListResult.


        :param accounting: The accounting of this EmosListResult.
        :type accounting: List[EmosListResultAccounting]
        """

        self._accounting = accounting
