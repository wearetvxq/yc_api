# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class OrdersListResultAccounting(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, one1: str=None, one_to_two1: str=None, two_to_ten1: str=None, ten_to_twenty_four1: str=None, twenty_four1: str=None, ave: str=None, rate: str=None):  # noqa: E501
        """OrdersListResultAccounting - a model defined in Swagger

        :param one1: The one1 of this OrdersListResultAccounting.  # noqa: E501
        :type one1: str
        :param one_to_two1: The one_to_two1 of this OrdersListResultAccounting.  # noqa: E501
        :type one_to_two1: str
        :param two_to_ten1: The two_to_ten1 of this OrdersListResultAccounting.  # noqa: E501
        :type two_to_ten1: str
        :param ten_to_twenty_four1: The ten_to_twenty_four1 of this OrdersListResultAccounting.  # noqa: E501
        :type ten_to_twenty_four1: str
        :param twenty_four1: The twenty_four1 of this OrdersListResultAccounting.  # noqa: E501
        :type twenty_four1: str
        :param ave: The ave of this OrdersListResultAccounting.  # noqa: E501
        :type ave: str
        :param rate: The rate of this OrdersListResultAccounting.  # noqa: E501
        :type rate: str
        """
        self.swagger_types = {
            'one1': str,
            'one_to_two1': str,
            'two_to_ten1': str,
            'ten_to_twenty_four1': str,
            'twenty_four1': str,
            'ave': str,
            'rate': str
        }

        self.attribute_map = {
            'one1': 'one1',
            'one_to_two1': 'oneToTwo1',
            'two_to_ten1': 'twoToTen1',
            'ten_to_twenty_four1': 'tenToTwentyFour1',
            'twenty_four1': 'twentyFour1',
            'ave': 'ave',
            'rate': 'rate'
        }

        self._one1 = one1
        self._one_to_two1 = one_to_two1
        self._two_to_ten1 = two_to_ten1
        self._ten_to_twenty_four1 = ten_to_twenty_four1
        self._twenty_four1 = twenty_four1
        self._ave = ave
        self._rate = rate

    @classmethod
    def from_dict(cls, dikt) -> 'OrdersListResultAccounting':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrdersListResultAccounting of this OrdersListResultAccounting.  # noqa: E501
        :rtype: OrdersListResultAccounting
        """
        return util.deserialize_model(dikt, cls)

    @property
    def one1(self) -> str:
        """Gets the one1 of this OrdersListResultAccounting.

        One hour  # noqa: E501

        :return: The one1 of this OrdersListResultAccounting.
        :rtype: str
        """
        return self._one1

    @one1.setter
    def one1(self, one1: str):
        """Sets the one1 of this OrdersListResultAccounting.

        One hour  # noqa: E501

        :param one1: The one1 of this OrdersListResultAccounting.
        :type one1: str
        """

        self._one1 = one1

    @property
    def one_to_two1(self) -> str:
        """Gets the one_to_two1 of this OrdersListResultAccounting.

        One to two hours  # noqa: E501

        :return: The one_to_two1 of this OrdersListResultAccounting.
        :rtype: str
        """
        return self._one_to_two1

    @one_to_two1.setter
    def one_to_two1(self, one_to_two1: str):
        """Sets the one_to_two1 of this OrdersListResultAccounting.

        One to two hours  # noqa: E501

        :param one_to_two1: The one_to_two1 of this OrdersListResultAccounting.
        :type one_to_two1: str
        """

        self._one_to_two1 = one_to_two1

    @property
    def two_to_ten1(self) -> str:
        """Gets the two_to_ten1 of this OrdersListResultAccounting.

        Two to ten hours  # noqa: E501

        :return: The two_to_ten1 of this OrdersListResultAccounting.
        :rtype: str
        """
        return self._two_to_ten1

    @two_to_ten1.setter
    def two_to_ten1(self, two_to_ten1: str):
        """Sets the two_to_ten1 of this OrdersListResultAccounting.

        Two to ten hours  # noqa: E501

        :param two_to_ten1: The two_to_ten1 of this OrdersListResultAccounting.
        :type two_to_ten1: str
        """

        self._two_to_ten1 = two_to_ten1

    @property
    def ten_to_twenty_four1(self) -> str:
        """Gets the ten_to_twenty_four1 of this OrdersListResultAccounting.

        Ten to twenty-four hours  # noqa: E501

        :return: The ten_to_twenty_four1 of this OrdersListResultAccounting.
        :rtype: str
        """
        return self._ten_to_twenty_four1

    @ten_to_twenty_four1.setter
    def ten_to_twenty_four1(self, ten_to_twenty_four1: str):
        """Sets the ten_to_twenty_four1 of this OrdersListResultAccounting.

        Ten to twenty-four hours  # noqa: E501

        :param ten_to_twenty_four1: The ten_to_twenty_four1 of this OrdersListResultAccounting.
        :type ten_to_twenty_four1: str
        """

        self._ten_to_twenty_four1 = ten_to_twenty_four1

    @property
    def twenty_four1(self) -> str:
        """Gets the twenty_four1 of this OrdersListResultAccounting.

        More than 24 hours  # noqa: E501

        :return: The twenty_four1 of this OrdersListResultAccounting.
        :rtype: str
        """
        return self._twenty_four1

    @twenty_four1.setter
    def twenty_four1(self, twenty_four1: str):
        """Sets the twenty_four1 of this OrdersListResultAccounting.

        More than 24 hours  # noqa: E501

        :param twenty_four1: The twenty_four1 of this OrdersListResultAccounting.
        :type twenty_four1: str
        """

        self._twenty_four1 = twenty_four1

    @property
    def ave(self) -> str:
        """Gets the ave of this OrdersListResultAccounting.

        Average length of orders  # noqa: E501

        :return: The ave of this OrdersListResultAccounting.
        :rtype: str
        """
        return self._ave

    @ave.setter
    def ave(self, ave: str):
        """Sets the ave of this OrdersListResultAccounting.

        Average length of orders  # noqa: E501

        :param ave: The ave of this OrdersListResultAccounting.
        :type ave: str
        """

        self._ave = ave

    @property
    def rate(self) -> str:
        """Gets the rate of this OrdersListResultAccounting.

        Two hours rate  # noqa: E501

        :return: The rate of this OrdersListResultAccounting.
        :rtype: str
        """
        return self._rate

    @rate.setter
    def rate(self, rate: str):
        """Sets the rate of this OrdersListResultAccounting.

        Two hours rate  # noqa: E501

        :param rate: The rate of this OrdersListResultAccounting.
        :type rate: str
        """

        self._rate = rate
