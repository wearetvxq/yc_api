# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Phonetokenss(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, times: int=None, noncestr: str=None):  # noqa: E501
        """Phonetokenss - a model defined in Swagger

        :param code: The code of this Phonetokenss.  # noqa: E501
        :type code: str
        :param times: The times of this Phonetokenss.  # noqa: E501
        :type times: int
        :param noncestr: The noncestr of this Phonetokenss.  # noqa: E501
        :type noncestr: str
        """
        self.swagger_types = {
            'code': str,
            'times': int,
            'noncestr': str
        }

        self.attribute_map = {
            'code': 'code',
            'times': 'times',
            'noncestr': 'noncestr'
        }

        self._code = code
        self._times = times
        self._noncestr = noncestr

    @classmethod
    def from_dict(cls, dikt) -> 'Phonetokenss':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The phonetokenss of this Phonetokenss.  # noqa: E501
        :rtype: Phonetokenss
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> str:
        """Gets the code of this Phonetokenss.

        system return code  # noqa: E501

        :return: The code of this Phonetokenss.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code: str):
        """Sets the code of this Phonetokenss.

        system return code  # noqa: E501

        :param code: The code of this Phonetokenss.
        :type code: str
        """

        self._code = code

    @property
    def times(self) -> int:
        """Gets the times of this Phonetokenss.

        system return news  # noqa: E501

        :return: The times of this Phonetokenss.
        :rtype: int
        """
        return self._times

    @times.setter
    def times(self, times: int):
        """Sets the times of this Phonetokenss.

        system return news  # noqa: E501

        :param times: The times of this Phonetokenss.
        :type times: int
        """

        self._times = times

    @property
    def noncestr(self) -> str:
        """Gets the noncestr of this Phonetokenss.

        system return news  # noqa: E501

        :return: The noncestr of this Phonetokenss.
        :rtype: str
        """
        return self._noncestr

    @noncestr.setter
    def noncestr(self, noncestr: str):
        """Sets the noncestr of this Phonetokenss.

        system return news  # noqa: E501

        :param noncestr: The noncestr of this Phonetokenss.
        :type noncestr: str
        """

        self._noncestr = noncestr
