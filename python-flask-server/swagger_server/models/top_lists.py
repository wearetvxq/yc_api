# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TopLists(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, area: str=None, number: str=None, contacts: str=None, phone: str=None, t2: str=None, times: str=None):  # noqa: E501
        """TopLists - a model defined in Swagger

        :param id: The id of this TopLists.  # noqa: E501
        :type id: int
        :param area: The area of this TopLists.  # noqa: E501
        :type area: str
        :param number: The number of this TopLists.  # noqa: E501
        :type number: str
        :param contacts: The contacts of this TopLists.  # noqa: E501
        :type contacts: str
        :param phone: The phone of this TopLists.  # noqa: E501
        :type phone: str
        :param t2: The t2 of this TopLists.  # noqa: E501
        :type t2: str
        :param times: The times of this TopLists.  # noqa: E501
        :type times: str
        """
        self.swagger_types = {
            'id': int,
            'area': str,
            'number': str,
            'contacts': str,
            'phone': str,
            't2': str,
            'times': str
        }

        self.attribute_map = {
            'id': 'id',
            'area': 'area',
            'number': 'number',
            'contacts': 'contacts',
            'phone': 'phone',
            't2': 't2',
            'times': 'times'
        }

        self._id = id
        self._area = area
        self._number = number
        self._contacts = contacts
        self._phone = phone
        self._t2 = t2
        self._times = times

    @classmethod
    def from_dict(cls, dikt) -> 'TopLists':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TopLists of this TopLists.  # noqa: E501
        :rtype: TopLists
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this TopLists.

        id  # noqa: E501

        :return: The id of this TopLists.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this TopLists.

        id  # noqa: E501

        :param id: The id of this TopLists.
        :type id: int
        """

        self._id = id

    @property
    def area(self) -> str:
        """Gets the area of this TopLists.

        area  # noqa: E501

        :return: The area of this TopLists.
        :rtype: str
        """
        return self._area

    @area.setter
    def area(self, area: str):
        """Sets the area of this TopLists.

        area  # noqa: E501

        :param area: The area of this TopLists.
        :type area: str
        """

        self._area = area

    @property
    def number(self) -> str:
        """Gets the number of this TopLists.

        serial number  # noqa: E501

        :return: The number of this TopLists.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number: str):
        """Sets the number of this TopLists.

        serial number  # noqa: E501

        :param number: The number of this TopLists.
        :type number: str
        """

        self._number = number

    @property
    def contacts(self) -> str:
        """Gets the contacts of this TopLists.

        Contacts  # noqa: E501

        :return: The contacts of this TopLists.
        :rtype: str
        """
        return self._contacts

    @contacts.setter
    def contacts(self, contacts: str):
        """Sets the contacts of this TopLists.

        Contacts  # noqa: E501

        :param contacts: The contacts of this TopLists.
        :type contacts: str
        """

        self._contacts = contacts

    @property
    def phone(self) -> str:
        """Gets the phone of this TopLists.

        phone  # noqa: E501

        :return: The phone of this TopLists.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this TopLists.

        phone  # noqa: E501

        :param phone: The phone of this TopLists.
        :type phone: str
        """

        self._phone = phone

    @property
    def t2(self) -> str:
        """Gets the t2 of this TopLists.

        T2 time  # noqa: E501

        :return: The t2 of this TopLists.
        :rtype: str
        """
        return self._t2

    @t2.setter
    def t2(self, t2: str):
        """Sets the t2 of this TopLists.

        T2 time  # noqa: E501

        :param t2: The t2 of this TopLists.
        :type t2: str
        """

        self._t2 = t2

    @property
    def times(self) -> str:
        """Gets the times of this TopLists.

        Processing time  # noqa: E501

        :return: The times of this TopLists.
        :rtype: str
        """
        return self._times

    @times.setter
    def times(self, times: str):
        """Sets the times of this TopLists.

        Processing time  # noqa: E501

        :param times: The times of this TopLists.
        :type times: str
        """

        self._times = times
