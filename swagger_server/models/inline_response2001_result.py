# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class InlineResponse2001Result(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id: int=None, type: str=None, down_num: int=None, status: str=None, time: str=None):
        """
        InlineResponse2001Result - a model defined in Swagger

        :param id: The id of this InlineResponse2001Result.
        :type id: int
        :param type: The type of this InlineResponse2001Result.
        :type type: str
        :param down_num: The down_num of this InlineResponse2001Result.
        :type down_num: int
        :param status: The status of this InlineResponse2001Result.
        :type status: str
        :param time: The time of this InlineResponse2001Result.
        :type time: str
        """
        self.swagger_types = {
            'id': int,
            'type': str,
            'down_num': int,
            'status': str,
            'time': str
        }

        self.attribute_map = {
            'id': 'ID',
            'type': 'type',
            'down_num': 'down_num',
            'status': 'status',
            'time': 'time'
        }

        self._id = id
        self._type = type
        self._down_num = down_num
        self._status = status
        self._time = time

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2001Result':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_1_result of this InlineResponse2001Result.
        :rtype: InlineResponse2001Result
        """
        return deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """
        Gets the id of this InlineResponse2001Result.
        Guest ID

        :return: The id of this InlineResponse2001Result.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """
        Sets the id of this InlineResponse2001Result.
        Guest ID

        :param id: The id of this InlineResponse2001Result.
        :type id: int
        """

        self._id = id

    @property
    def type(self) -> str:
        """
        Gets the type of this InlineResponse2001Result.
        type

        :return: The type of this InlineResponse2001Result.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """
        Sets the type of this InlineResponse2001Result.
        type

        :param type: The type of this InlineResponse2001Result.
        :type type: str
        """

        self._type = type

    @property
    def down_num(self) -> int:
        """
        Gets the down_num of this InlineResponse2001Result.
        down_num

        :return: The down_num of this InlineResponse2001Result.
        :rtype: int
        """
        return self._down_num

    @down_num.setter
    def down_num(self, down_num: int):
        """
        Sets the down_num of this InlineResponse2001Result.
        down_num

        :param down_num: The down_num of this InlineResponse2001Result.
        :type down_num: int
        """

        self._down_num = down_num

    @property
    def status(self) -> str:
        """
        Gets the status of this InlineResponse2001Result.
        status

        :return: The status of this InlineResponse2001Result.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """
        Sets the status of this InlineResponse2001Result.
        status

        :param status: The status of this InlineResponse2001Result.
        :type status: str
        """

        self._status = status

    @property
    def time(self) -> str:
        """
        Gets the time of this InlineResponse2001Result.
        time

        :return: The time of this InlineResponse2001Result.
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time: str):
        """
        Sets the time of this InlineResponse2001Result.
        time

        :param time: The time of this InlineResponse2001Result.
        :type time: str
        """

        self._time = time

